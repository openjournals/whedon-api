Here are some things you can ask me to do:

```
# List all of RoboNeuro's capabilities
@roboneuro commands

# Assign a GitHub user as the sole tester of this submission
@roboneuro assign @username as tester

# Add a GitHub user to the testers of this submission
@roboneuro add @username as tester

# Re-invite a tester (if they can't update checklists)
@roboneuro re-invite @username as tester

# Remove a GitHub user from the testers of this submission
@roboneuro remove @username as tester

# List of manager GitHub usernames
@roboneuro list managers

# List of current testers
@roboneuro list testers

# Change manager assignment
@roboneuro assign @username as manager

# Set the software archive DOI at the top of the issue e.g.
@roboneuro set 10.0000/zenodo.00000 as archive

# Set the software version at the top of the issue e.g.
@roboneuro set v1.0.1 as version

# Open the review issue
@roboneuro start review

MANAGERIAL TASKS

# All commands can be run on a non-default branch, to do this pass a custom
# branch name by following the command with `from branch custom-branch-name`.
# For example:

# Compile the paper
@roboneuro generate pdf

# Compile the paper from alternative branch
@roboneuro generate pdf from branch custom-branch-name

# Compile the NeuroLibre notebook
@roboneuro generate nl-notebook

# Compile the NeuroLibre notebook from alternative branch
@roboneuro generate nl-notebook from branch custom-branch-name

# Remind an author or tester to return to a review after a
# certain period of time (supported units days and weeks)
@roboneuro remind @tester in 2 days

# Ask RoboNeuro to do a dry run of accepting the paper and depositing with Crossref
@roboneuro accept

# Ask RoboNeuro to check the references for missing DOIs
@roboneuro check references

# Ask RoboNeuro to check repository statistics for the submitted software
@roboneuro check repository

MANAGER-IN-CHIEF TASKS

# Invite an manager to edit a submission (sending them an email)
@roboneuro invite @manager as manager

# Reject a paper
@roboneuro reject

# Withdraw a paper
@roboneuro withdraw

# Ask RoboNeuro to actually accept the paper and deposit with Crossref
@roboneuro accept deposit=true

```
